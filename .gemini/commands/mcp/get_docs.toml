description = "Extract specific documentation sections from web pages using Gemini AI"
prompt = """# Extract Documentation from URLs

Use the `get_docs` MCP tool to extract specific documentation sections from web pages using Gemini 2.5 Flash.

## Usage

This tool takes a URL and an optional `extract_value`. You must provide the arguments as keyword arguments.

### Get entire page
`@get_docs url="<url>"`

### Extract a specific section
`@get_docs url="<url>", extract_value="<topic>"`


## What it does

This tool:
1. Fetches content from the specified URL.
2. Uses Gemini 2.5 Flash Preview to intelligently extract documentation for the requested section if `extract_value` is provided.
3. Returns the relevant documentation as clean, readable text.

## Best for

- API documentation extraction
- Function/method documentation
- Specific topic documentation from larger pages
- Technical documentation that needs focused extraction

## Examples

### Extract Python json.dumps documentation
`@get_docs url="https://docs.python.org/3/library/json.html", extract_value="json.dumps"`

### Get the whole page for an AWS service
`@get_docs url="https://docs.aws.amazon.com/s3/latest/userguide/s3-getting-started.html"`


## Command Template

When called with arguments, use them as follows:
```
get_docs({{args}})
```

**Note:** You must provide the arguments in `key="value"` format, separated by commas, just like in a Python function call.
"""