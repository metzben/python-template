description = "Extract code functions for analysis only - no modifications allowed"
prompt = """# Build Context - Code Extraction Only

**⚠️ CRITICAL INSTRUCTION: DO NOT TAKE ANY ACTIONS BEYOND CONTEXT BUILDING ⚠️**

You are ONLY extracting code for analysis. Do not:
- Make any changes to files
- Run tests or builds  
- Create new files
- Suggest improvements
- Execute any commands except the extract tool

Your sole purpose is to gather relevant code using the @tools/extract script.

## Current Task

Extract the following function based on the provided arguments: {{args}}

Parse the arguments to determine:
- **File/Directory**: The path to search
- **Function Signature**: The exact function signature to find

Execute the appropriate extract command:
```bash
@tools/extract "file_or_directory" "function_signature"
```

## Parameters

- **file_or_directory**: Path to search (single file or directory)
- **function_signature**: Exact function signature to find (must be quoted)

## Language Support

- **Python**: Indentation-based extraction
- **JavaScript**: Brace-based extraction  
- **Go**: Brace-based extraction

## Example Usage

**Python Function:**
```
@tools/extract . "async def fetch_urls(urls: List[str], ctx: Context = None) -> str:"
```

**JavaScript Function:**
```
@tools/extract app.js "function processData(items) {"
```

**Go Function:**
```
@tools/extract main.go "func handleRequest(w http.ResponseWriter, r *http.Request) {"
```

**Class Method:**
```
@tools/extract models/ "def send_message(self, prompt: str) -> str:"
```

## Instructions

1. Execute the extract command with the provided arguments
2. Present the extracted code without commentary
3. Stop - do not analyze or suggest changes

## Notes

- Function signatures are case-sensitive and whitespace-sensitive
- Leading whitespace is automatically trimmed
- Can extract from single files or entire directories
- Use quotes around function signatures to handle special characters"""
