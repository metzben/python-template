#!/usr/bin/env bash

# Remove the two git worktrees and their branches created by the trees script

set -e  # Exit on error

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Get the current project name from the directory
PROJECT_NAME=$(basename "$(pwd)")

echo -e "${BOLD}${RED}üî• Removing worktrees and branches for ${YELLOW}$PROJECT_NAME${RED} project...${NC}"
echo ""

# Track branch names for deletion
BRANCH1=""
BRANCH2=""

# Remove first worktree and track its branch
if git worktree list | grep -q "${PROJECT_NAME}-wt1"; then
    # Get the branch name before removing worktree
    BRANCH1=$(git worktree list | grep "${PROJECT_NAME}-wt1" | awk '{print $3}')
    echo -e "${RED}üóëÔ∏è  Removing worktree: ${YELLOW}../${PROJECT_NAME}-wt1${NC}"
    git worktree remove ../${PROJECT_NAME}-wt1 --force
else
    echo -e "${BLUE}‚ÑπÔ∏è  Worktree ${YELLOW}../${PROJECT_NAME}-wt1${BLUE} not found, skipping${NC}"
fi

echo ""

# Remove second worktree and track its branch
if git worktree list | grep -q "${PROJECT_NAME}-wt2"; then
    # Get the branch name before removing worktree
    BRANCH2=$(git worktree list | grep "${PROJECT_NAME}-wt2" | awk '{print $3}')
    echo -e "${RED}üóëÔ∏è  Removing worktree: ${YELLOW}../${PROJECT_NAME}-wt2${NC}"
    git worktree remove ../${PROJECT_NAME}-wt2 --force
else
    echo -e "${BLUE}‚ÑπÔ∏è  Worktree ${YELLOW}../${PROJECT_NAME}-wt2${BLUE} not found, skipping${NC}"
fi

echo ""

# Clean up any prunable worktree entries
echo -e "${CYAN}üßπ Pruning worktree entries...${NC}"
git worktree prune

echo ""

# Delete the branches if they were found
if [ -n "$BRANCH1" ] && [ "$BRANCH1" != "+" ]; then
    echo -e "${RED}üî¥ Deleting branch: ${YELLOW}$BRANCH1${NC}"
    git branch -D "$BRANCH1" 2>/dev/null || echo -e "${BLUE}‚ÑπÔ∏è  Branch ${YELLOW}$BRANCH1${BLUE} already deleted or doesn't exist${NC}"
fi

if [ -n "$BRANCH2" ] && [ "$BRANCH2" != "+" ]; then
    echo -e "${RED}üî¥ Deleting branch: ${YELLOW}$BRANCH2${NC}"
    git branch -D "$BRANCH2" 2>/dev/null || echo -e "${BLUE}‚ÑπÔ∏è  Branch ${YELLOW}$BRANCH2${BLUE} already deleted or doesn't exist${NC}"
fi

echo ""

# Also delete feature1 and feature2 branches if they exist
echo -e "${RED}üî¥ Deleting feature branches...${NC}"
git branch -D feature1 2>/dev/null || echo -e "${BLUE}‚ÑπÔ∏è  Branch ${YELLOW}feature1${BLUE} already deleted or doesn't exist${NC}"
git branch -D feature2 2>/dev/null || echo -e "${BLUE}‚ÑπÔ∏è  Branch ${YELLOW}feature2${BLUE} already deleted or doesn't exist${NC}"

echo ""
echo -e "${BOLD}${GREEN}‚úÖ Successfully removed worktrees and branches!${NC}"